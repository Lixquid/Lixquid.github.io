(function() {
  var activeCode, activeInput, addInputGroup, buildArc, data, eCodeFrom, eCodeLarge, eCodeRadius, eCodeRotation, eCodeSweep, eCodeTo, eFrom, eInputFrom, eInputRadius, eInputRotation, eInputTo, ePath, eRadius, eRadiusRect, eSvg, eTo, holding, resetInputs, toInt;

  eRadiusRect = document.getElementById("svg--radiusrect");

  eRadius = document.getElementById("svg--radius");

  eFrom = document.getElementById("svg--from");

  eTo = document.getElementById("svg--to");

  ePath = document.getElementById("svg--path");

  eSvg = document.getElementById("svg--area");

  eCodeFrom = document.getElementById("svg--code--from");

  eCodeTo = document.getElementById("svg--code--to");

  eCodeRadius = document.getElementById("svg--code--radius");

  eCodeLarge = document.getElementById("svg--code--large");

  eCodeSweep = document.getElementById("svg--code--sweep");

  eCodeRotation = document.getElementById("svg--code--rotation");

  eInputFrom = document.getElementById("svg--input--from");

  eInputTo = document.getElementById("svg--input--to");

  eInputRadius = document.getElementById("svg--input--radius");

  eInputRotation = document.getElementById("svg--input--rotation");

  holding = null;

  data = {
    from: {
      x: 100,
      y: 100
    },
    to: {
      x: 300,
      y: 200
    },
    radius: {
      x: 50,
      y: 50
    },
    rotation: 0,
    large: 1,
    sweep: 1
  };

  buildArc = function() {
    return ePath.setAttribute("d", "M " + data.from.x + "," + data.from.y + " A " + data.radius.x + "," + data.radius.y + " " + data.rotation + " " + (toInt(data.large)) + " " + (toInt(data.sweep)) + " " + data.to.x + "," + data.to.y);
  };

  toInt = function(bool) {
    if (bool) {
      return 1;
    } else {
      return 0;
    }
  };

  window.addEventListener("mousedown", function(ev) {
    if (ev.target === eFrom || ev.target === eTo || ev.target === eRadius) {
      return holding = ev.target;
    }
  });

  window.addEventListener("mouseup", function(ev) {
    return holding = null;
  });

  window.addEventListener("mousemove", function(ev) {
    var offsetRect, offsetWin, x, y;
    if (!holding) {
      return;
    }
    offsetRect = eSvg.getBoundingClientRect();
    offsetWin = eSvg.ownerDocument.defaultView;
    x = Math.floor(ev.pageX - offsetRect.left - offsetWin.pageXOffset);
    y = Math.floor(ev.pageY - offsetRect.top - offsetWin.pageYOffset);
    if (x < 0 || y < 0) {
      return;
    }
    if (x > offsetRect.width || y > offsetRect.height) {
      return;
    }
    if (holding === eFrom) {
      eFrom.setAttribute("cx", x);
      eFrom.setAttribute("cy", y);
      data.from.x = x;
      data.from.y = y;
      eCodeFrom.textContent = x + "," + y;
    }
    if (holding === eTo) {
      eTo.setAttribute("cx", x);
      eTo.setAttribute("cy", y);
      data.to.x = x;
      data.to.y = y;
      eCodeTo.textContent = x + "," + y;
    }
    if (holding === eRadius) {
      eRadius.setAttribute("cx", x);
      eRadius.setAttribute("cy", y);
      eRadiusRect.setAttribute("width", x);
      eRadiusRect.setAttribute("height", y);
      data.radius.x = x;
      data.radius.y = y;
      eCodeRadius.textContent = x + "," + y;
    }
    return buildArc();
  });

  eCodeLarge.addEventListener("click", function() {
    data.large = !data.large;
    eCodeLarge.textContent = toInt(data.large);
    return buildArc();
  });

  eCodeSweep.addEventListener("click", function() {
    data.sweep = !data.sweep;
    eCodeSweep.textContent = toInt(data.sweep);
    return buildArc();
  });

  window.addEventListener("click", function(ev) {
    var ref;
    if ((ref = ev.target) === eCodeFrom || ref === eCodeTo || ref === eCodeRadius || ref === eCodeRotation || ref === eInputFrom || ref === eInputTo || ref === eInputRadius || ref === eInputRotation) {
      return;
    }
    return resetInputs();
  });

  activeInput = null;

  activeCode = null;

  resetInputs = function() {
    var match;
    if (activeInput === eInputFrom) {
      if (match = eInputFrom.value.match(/(\d+)\s*[ ,]\s*(\d+)/)) {
        data.from.x = parseInt(match[1]);
        data.from.y = parseInt(match[2]);
        eFrom.setAttribute("cx", data.from.x);
        eFrom.setAttribute("cy", data.from.y);
        eCodeFrom.textContent = data.from.x + "," + data.from.y;
      }
    }
    if (activeInput === eInputTo) {
      if (match = eInputTo.value.match(/(\d+)\s*[ ,]\s*(\d+)/)) {
        data.to.x = parseInt(match[1]);
        data.to.y = parseInt(match[2]);
        eTo.setAttribute("cx", data.to.x);
        eTo.setAttribute("cy", data.to.y);
        eCodeTo.textContent = data.to.x + "," + data.to.y;
      }
    }
    if (activeInput === eInputRadius) {
      if (match = eInputRadius.value.match(/(\d+)\s*[ ,]\s*(\d+)/)) {
        data.radius.x = parseInt(match[1]);
        data.radius.y = parseInt(match[2]);
        eRadius.setAttribute("cx", data.radius.x);
        eRadius.setAttribute("cy", data.radius.y);
        eRadiusRect.setAttribute("width", data.radius.x);
        eRadiusRect.setAttribute("height", data.radius.y);
        eCodeRadius.textContent = data.radius.x + "," + data.radius.y;
      }
    }
    if (activeInput === eInputRotation) {
      if (!isNaN(match = parseInt(eInputRotation.value))) {
        data.rotation = match;
        eCodeRotation.textContent = match;
      }
    }
    buildArc();
    eCodeFrom.style.display = null;
    eCodeTo.style.display = null;
    eCodeRadius.style.display = null;
    eCodeRotation.style.display = null;
    eInputFrom.style.display = "none";
    eInputTo.style.display = "none";
    eInputRadius.style.display = "none";
    eInputRotation.style.display = "none";
    return activeInput = null;
  };

  addInputGroup = function(code, input) {
    code.addEventListener("click", function() {
      resetInputs();
      activeInput = input;
      activeCode = code;
      code.style.display = "none";
      input.value = code.textContent;
      input.style.display = "initial";
      return input.focus();
    });
    return input.addEventListener("keyup", function(ev) {
      if (ev.keyCode !== 13) {
        return;
      }
      return resetInputs();
    });
  };

  addInputGroup(eCodeFrom, eInputFrom);

  addInputGroup(eCodeTo, eInputTo);

  addInputGroup(eCodeRotation, eInputRotation);

  addInputGroup(eCodeRadius, eInputRadius);

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FkZ2V0cy9zdmdhcmNzL2luZGV4LmpzIiwic291cmNlcyI6WyJnYWRnZXRzL3N2Z2FyY3MvaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0FBQUEsTUFBQTs7RUFBQSxXQUFBLEdBQWMsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsaUJBQXhCOztFQUNkLE9BQUEsR0FBVSxRQUFRLENBQUMsY0FBVCxDQUF3QixhQUF4Qjs7RUFDVixLQUFBLEdBQVEsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsV0FBeEI7O0VBQ1IsR0FBQSxHQUFNLFFBQVEsQ0FBQyxjQUFULENBQXdCLFNBQXhCOztFQUNOLEtBQUEsR0FBUSxRQUFRLENBQUMsY0FBVCxDQUF3QixXQUF4Qjs7RUFDUixJQUFBLEdBQU8sUUFBUSxDQUFDLGNBQVQsQ0FBd0IsV0FBeEI7O0VBQ1AsU0FBQSxHQUFZLFFBQVEsQ0FBQyxjQUFULENBQXdCLGlCQUF4Qjs7RUFDWixPQUFBLEdBQVUsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsZUFBeEI7O0VBQ1YsV0FBQSxHQUFjLFFBQVEsQ0FBQyxjQUFULENBQXdCLG1CQUF4Qjs7RUFDZCxVQUFBLEdBQWEsUUFBUSxDQUFDLGNBQVQsQ0FBd0Isa0JBQXhCOztFQUNiLFVBQUEsR0FBYSxRQUFRLENBQUMsY0FBVCxDQUF3QixrQkFBeEI7O0VBQ2IsYUFBQSxHQUFnQixRQUFRLENBQUMsY0FBVCxDQUF3QixxQkFBeEI7O0VBQ2hCLFVBQUEsR0FBYSxRQUFRLENBQUMsY0FBVCxDQUF3QixrQkFBeEI7O0VBQ2IsUUFBQSxHQUFXLFFBQVEsQ0FBQyxjQUFULENBQXdCLGdCQUF4Qjs7RUFDWCxZQUFBLEdBQWUsUUFBUSxDQUFDLGNBQVQsQ0FBd0Isb0JBQXhCOztFQUNmLGNBQUEsR0FBaUIsUUFBUSxDQUFDLGNBQVQsQ0FBd0Isc0JBQXhCOztFQUVqQixPQUFBLEdBQVU7O0VBQ1YsSUFBQSxHQUNDO0lBQUEsSUFBQSxFQUNDO01BQUEsQ0FBQSxFQUFHLEdBQUg7TUFD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ZixFQUEwQixVQUExQjs7RUFDQSxhQUFBLENBQWUsT0FBZixFQUF3QixRQUF4Qjs7RUFDQSxhQUFBLENBQWUsYUFBZixFQUE4QixjQUE5Qjs7RUFDQSxhQUFBLENBQWUsV0FBZixFQUE0QixZQUE1QjtBQXBLQSIsInNvdXJjZXNDb250ZW50IjpbIiMgV2FybmluZzogVGhpcyBjb2RlIGlzIGtpbmQgb2YgaG9ycmlibGVcbiMgcmVhZDogZXh0cmVtZWx5IHVnbHkgYW5kIG1lc3N5XG4jIGNsZWFudXAgb24gYWlzbGUgNFxuXG5lUmFkaXVzUmVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkIFwic3ZnLS1yYWRpdXNyZWN0XCJcbmVSYWRpdXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCBcInN2Zy0tcmFkaXVzXCJcbmVGcm9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgXCJzdmctLWZyb21cIlxuZVRvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgXCJzdmctLXRvXCJcbmVQYXRoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgXCJzdmctLXBhdGhcIlxuZVN2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkIFwic3ZnLS1hcmVhXCJcbmVDb2RlRnJvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkIFwic3ZnLS1jb2RlLS1mcm9tXCJcbmVDb2RlVG8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCBcInN2Zy0tY29kZS0tdG9cIlxuZUNvZGVSYWRpdXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCBcInN2Zy0tY29kZS0tcmFkaXVzXCJcbmVDb2RlTGFyZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCBcInN2Zy0tY29kZS0tbGFyZ2VcIlxuZUNvZGVTd2VlcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkIFwic3ZnLS1jb2RlLS1zd2VlcFwiXG5lQ29kZVJvdGF0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgXCJzdmctLWNvZGUtLXJvdGF0aW9uXCJcbmVJbnB1dEZyb20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCBcInN2Zy0taW5wdXQtLWZyb21cIlxuZUlucHV0VG8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCBcInN2Zy0taW5wdXQtLXRvXCJcbmVJbnB1dFJhZGl1cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkIFwic3ZnLS1pbnB1dC0tcmFkaXVzXCJcbmVJbnB1dFJvdGF0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgXCJzdmctLWlucHV0LS1yb3RhdGlvblwiXG5cbmhvbGRpbmcgPSBudWxsXG5kYXRhID1cblx0ZnJvbTpcblx0XHR4OiAxMDBcblx0XHR5OiAxMDBcblx0dG86XG5cdFx0eDogMzAwXG5cdFx0eTogMjAwXG5cdHJhZGl1czpcblx0XHR4OiA1MFxuXHRcdHk6IDUwXG5cdHJvdGF0aW9uOiAwXG5cdGxhcmdlOiAxXG5cdHN3ZWVwOiAxXG5cbmJ1aWxkQXJjID0gLT5cblx0ZVBhdGguc2V0QXR0cmlidXRlKCBcImRcIixcblx0XHRcIk0gI3tkYXRhLmZyb20ueH0sI3tkYXRhLmZyb20ueX1cblx0XHRcdEEgI3tkYXRhLnJhZGl1cy54fSwje2RhdGEucmFkaXVzLnl9XG5cdFx0XHQje2RhdGEucm90YXRpb259ICN7dG9JbnQoIGRhdGEubGFyZ2UgKX0gI3t0b0ludCggZGF0YS5zd2VlcCApfVxuXHRcdFx0I3tkYXRhLnRvLnh9LCN7ZGF0YS50by55fVwiIClcbnRvSW50ID0gKCBib29sICkgLT5cblx0aWYgYm9vbCB0aGVuIDEgZWxzZSAwXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyIFwibW91c2Vkb3duXCIsICggZXYgKSAtPlxuXHRpZiBldi50YXJnZXQgPT0gZUZyb20gb3IgZXYudGFyZ2V0ID09IGVUbyBvciBldi50YXJnZXQgPT0gZVJhZGl1c1xuXHRcdGhvbGRpbmcgPSBldi50YXJnZXRcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIgXCJtb3VzZXVwXCIsICggZXYgKSAtPlxuXHRob2xkaW5nID0gbnVsbFxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciBcIm1vdXNlbW92ZVwiLCAoIGV2ICkgLT5cblx0cmV0dXJuIGlmIG5vdCBob2xkaW5nXG5cblx0b2Zmc2V0UmVjdCA9IGVTdmcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcblx0b2Zmc2V0V2luID0gZVN2Zy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3XG5cdHggPSBNYXRoLmZsb29yKCBldi5wYWdlWCAtIG9mZnNldFJlY3QubGVmdCAtIG9mZnNldFdpbi5wYWdlWE9mZnNldCApXG5cdHkgPSBNYXRoLmZsb29yKCBldi5wYWdlWSAtIG9mZnNldFJlY3QudG9wIC0gb2Zmc2V0V2luLnBhZ2VZT2Zmc2V0IClcblxuXHRyZXR1cm4gaWYgeCA8IDAgb3IgeSA8IDBcblx0cmV0dXJuIGlmIHggPiBvZmZzZXRSZWN0LndpZHRoIG9yIHkgPiBvZmZzZXRSZWN0LmhlaWdodFxuXG5cdGlmIGhvbGRpbmcgPT0gZUZyb21cblx0XHRlRnJvbS5zZXRBdHRyaWJ1dGUoIFwiY3hcIiwgeCApXG5cdFx0ZUZyb20uc2V0QXR0cmlidXRlKCBcImN5XCIsIHkgKVxuXHRcdGRhdGEuZnJvbS54ID0geFxuXHRcdGRhdGEuZnJvbS55ID0geVxuXHRcdGVDb2RlRnJvbS50ZXh0Q29udGVudCA9IHggKyBcIixcIiArIHlcblx0aWYgaG9sZGluZyA9PSBlVG9cblx0XHRlVG8uc2V0QXR0cmlidXRlKCBcImN4XCIsIHggKVxuXHRcdGVUby5zZXRBdHRyaWJ1dGUoIFwiY3lcIiwgeSApXG5cdFx0ZGF0YS50by54ID0geFxuXHRcdGRhdGEudG8ueSA9IHlcblx0XHRlQ29kZVRvLnRleHRDb250ZW50ID0geCArIFwiLFwiICsgeVxuXHRpZiBob2xkaW5nID09IGVSYWRpdXNcblx0XHRlUmFkaXVzLnNldEF0dHJpYnV0ZSggXCJjeFwiLCB4IClcblx0XHRlUmFkaXVzLnNldEF0dHJpYnV0ZSggXCJjeVwiLCB5IClcblx0XHRlUmFkaXVzUmVjdC5zZXRBdHRyaWJ1dGUoIFwid2lkdGhcIiwgeCApXG5cdFx0ZVJhZGl1c1JlY3Quc2V0QXR0cmlidXRlKCBcImhlaWdodFwiLCB5IClcblx0XHRkYXRhLnJhZGl1cy54ID0geFxuXHRcdGRhdGEucmFkaXVzLnkgPSB5XG5cdFx0ZUNvZGVSYWRpdXMudGV4dENvbnRlbnQgPSB4ICsgXCIsXCIgKyB5XG5cblx0YnVpbGRBcmMoKVxuXG5lQ29kZUxhcmdlLmFkZEV2ZW50TGlzdGVuZXIgXCJjbGlja1wiLCAtPlxuXHRkYXRhLmxhcmdlID0gbm90IGRhdGEubGFyZ2Vcblx0ZUNvZGVMYXJnZS50ZXh0Q29udGVudCA9IHRvSW50KCBkYXRhLmxhcmdlIClcblx0YnVpbGRBcmMoKVxuXG5lQ29kZVN3ZWVwLmFkZEV2ZW50TGlzdGVuZXIgXCJjbGlja1wiLCAtPlxuXHRkYXRhLnN3ZWVwID0gbm90IGRhdGEuc3dlZXBcblx0ZUNvZGVTd2VlcC50ZXh0Q29udGVudCA9IHRvSW50KCBkYXRhLnN3ZWVwIClcblx0YnVpbGRBcmMoKVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciBcImNsaWNrXCIsICggZXYgKSAtPlxuXHRyZXR1cm4gaWYgZXYudGFyZ2V0IGluIFtcblx0XHRlQ29kZUZyb21cblx0XHRlQ29kZVRvXG5cdFx0ZUNvZGVSYWRpdXNcblx0XHRlQ29kZVJvdGF0aW9uXG5cdFx0ZUlucHV0RnJvbVxuXHRcdGVJbnB1dFRvXG5cdFx0ZUlucHV0UmFkaXVzXG5cdFx0ZUlucHV0Um90YXRpb25cblx0XVxuXHRyZXNldElucHV0cygpXG5cbmFjdGl2ZUlucHV0ID0gbnVsbFxuYWN0aXZlQ29kZSA9IG51bGxcblxucmVzZXRJbnB1dHMgPSAtPlxuXHRpZiBhY3RpdmVJbnB1dCA9PSBlSW5wdXRGcm9tXG5cdFx0aWYgbWF0Y2ggPSBlSW5wdXRGcm9tLnZhbHVlLm1hdGNoIC8oXFxkKylcXHMqWyAsXVxccyooXFxkKykvXG5cdFx0XHRkYXRhLmZyb20ueCA9IHBhcnNlSW50KCBtYXRjaFsxXSApXG5cdFx0XHRkYXRhLmZyb20ueSA9IHBhcnNlSW50KCBtYXRjaFsyXSApXG5cdFx0XHRlRnJvbS5zZXRBdHRyaWJ1dGUoIFwiY3hcIiwgZGF0YS5mcm9tLnggKVxuXHRcdFx0ZUZyb20uc2V0QXR0cmlidXRlKCBcImN5XCIsIGRhdGEuZnJvbS55IClcblx0XHRcdGVDb2RlRnJvbS50ZXh0Q29udGVudCA9IFwiI3tkYXRhLmZyb20ueH0sI3tkYXRhLmZyb20ueX1cIlxuXHRpZiBhY3RpdmVJbnB1dCA9PSBlSW5wdXRUb1xuXHRcdGlmIG1hdGNoID0gZUlucHV0VG8udmFsdWUubWF0Y2ggLyhcXGQrKVxccypbICxdXFxzKihcXGQrKS9cblx0XHRcdGRhdGEudG8ueCA9IHBhcnNlSW50KCBtYXRjaFsxXSApXG5cdFx0XHRkYXRhLnRvLnkgPSBwYXJzZUludCggbWF0Y2hbMl0gKVxuXHRcdFx0ZVRvLnNldEF0dHJpYnV0ZSggXCJjeFwiLCBkYXRhLnRvLnggKVxuXHRcdFx0ZVRvLnNldEF0dHJpYnV0ZSggXCJjeVwiLCBkYXRhLnRvLnkgKVxuXHRcdFx0ZUNvZGVUby50ZXh0Q29udGVudCA9IFwiI3tkYXRhLnRvLnh9LCN7ZGF0YS50by55fVwiXG5cdGlmIGFjdGl2ZUlucHV0ID09IGVJbnB1dFJhZGl1c1xuXHRcdGlmIG1hdGNoID0gZUlucHV0UmFkaXVzLnZhbHVlLm1hdGNoIC8oXFxkKylcXHMqWyAsXVxccyooXFxkKykvXG5cdFx0XHRkYXRhLnJhZGl1cy54ID0gcGFyc2VJbnQoIG1hdGNoWzFdIClcblx0XHRcdGRhdGEucmFkaXVzLnkgPSBwYXJzZUludCggbWF0Y2hbMl0gKVxuXHRcdFx0ZVJhZGl1cy5zZXRBdHRyaWJ1dGUoIFwiY3hcIiwgZGF0YS5yYWRpdXMueCApXG5cdFx0XHRlUmFkaXVzLnNldEF0dHJpYnV0ZSggXCJjeVwiLCBkYXRhLnJhZGl1cy55IClcblx0XHRcdGVSYWRpdXNSZWN0LnNldEF0dHJpYnV0ZSggXCJ3aWR0aFwiLCBkYXRhLnJhZGl1cy54IClcblx0XHRcdGVSYWRpdXNSZWN0LnNldEF0dHJpYnV0ZSggXCJoZWlnaHRcIiwgZGF0YS5yYWRpdXMueSApXG5cdFx0XHRlQ29kZVJhZGl1cy50ZXh0Q29udGVudCA9IFwiI3tkYXRhLnJhZGl1cy54fSwje2RhdGEucmFkaXVzLnl9XCJcblx0aWYgYWN0aXZlSW5wdXQgPT0gZUlucHV0Um90YXRpb25cblx0XHRpZiBub3QgaXNOYU4oIG1hdGNoID0gcGFyc2VJbnQoIGVJbnB1dFJvdGF0aW9uLnZhbHVlICkgKVxuXHRcdFx0ZGF0YS5yb3RhdGlvbiA9IG1hdGNoXG5cdFx0XHRlQ29kZVJvdGF0aW9uLnRleHRDb250ZW50ID0gbWF0Y2hcblx0YnVpbGRBcmMoKVxuXG5cdGVDb2RlRnJvbS5zdHlsZS5kaXNwbGF5ID0gbnVsbFxuXHRlQ29kZVRvLnN0eWxlLmRpc3BsYXkgPSBudWxsXG5cdGVDb2RlUmFkaXVzLnN0eWxlLmRpc3BsYXkgPSBudWxsXG5cdGVDb2RlUm90YXRpb24uc3R5bGUuZGlzcGxheSA9IG51bGxcblx0ZUlucHV0RnJvbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcblx0ZUlucHV0VG8uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG5cdGVJbnB1dFJhZGl1cy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcblx0ZUlucHV0Um90YXRpb24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG5cdGFjdGl2ZUlucHV0ID0gbnVsbFxuXG5hZGRJbnB1dEdyb3VwID0gKCBjb2RlLCBpbnB1dCApIC0+XG5cdGNvZGUuYWRkRXZlbnRMaXN0ZW5lciBcImNsaWNrXCIsIC0+XG5cdFx0cmVzZXRJbnB1dHMoKVxuXHRcdGFjdGl2ZUlucHV0ID0gaW5wdXRcblx0XHRhY3RpdmVDb2RlID0gY29kZVxuXHRcdGNvZGUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXG5cdFx0aW5wdXQudmFsdWUgPSBjb2RlLnRleHRDb250ZW50XG5cdFx0aW5wdXQuc3R5bGUuZGlzcGxheSA9IFwiaW5pdGlhbFwiXG5cdFx0aW5wdXQuZm9jdXMoKVxuXHRpbnB1dC5hZGRFdmVudExpc3RlbmVyIFwia2V5dXBcIiwgKCBldiApIC0+XG5cdFx0cmV0dXJuIGlmIGV2LmtleUNvZGUgIT0gMTNcblx0XHRyZXNldElucHV0cygpXG5cbmFkZElucHV0R3JvdXAoIGVDb2RlRnJvbSwgZUlucHV0RnJvbSApXG5hZGRJbnB1dEdyb3VwKCBlQ29kZVRvLCBlSW5wdXRUbyApXG5hZGRJbnB1dEdyb3VwKCBlQ29kZVJvdGF0aW9uLCBlSW5wdXRSb3RhdGlvbiApXG5hZGRJbnB1dEdyb3VwKCBlQ29kZVJhZGl1cywgZUlucHV0UmFkaXVzIClcbiJdfQ==
