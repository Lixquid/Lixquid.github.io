(function() {
  var $transformInput, $transformOutput, $transformType, doCopy, doTransform, fcc, key, lipsum, shortcutDown, shortcutEnter, shortcutUp, transforms;

  $(function() {
    return $("#transform--input").focus();
  });

  fcc = String.fromCharCode;

  transforms = {
    "Uppercase": function(input) {
      return input.toUpperCase();
    },
    "Lowercase": function(input) {
      return input.toLowerCase();
    },
    "ROT 13": function(input) {
      return input.replace(/[a-z]/gi, function(c) {
        c = c.charCodeAt(0);
        if (c >= 97) {
          return fcc((c - 97 + 13) % 26 + 97);
        } else {
          return fcc((c - 65 + 13) % 26 + 65);
        }
      });
    },
    "ROT 47": function(input) {
      return input.replace(/[\x21-\x7e]/g, function(c) {
        return fcc((c.charCodeAt(0) - 33 + 47) % 94 + 33);
      });
    },
    "Fullwidth": function(input) {
      return input.replace(/[\x21-\x7e]/g, function(c) {
        return fcc(c.charCodeAt(0) + 65281 - 33);
      });
    },
    "Circled": function(input) {
      return input.replace(/[a-z1-9]/gi, function(c) {
        c = c.charCodeAt(0);
        if (c >= 97) {
          return fcc(c + 9424 - 97);
        } else if (c >= 65) {
          return fcc(c + 9398 - 65);
        } else {
          return fcc(c + 9312 - 49);
        }
      });
    },
    "Math Fraktur": function(input) {
      return input.replace(/[a-z]/gi, function(c) {
        c = c.charCodeAt(0);
        if (c >= 97) {
          return fcc(55349) + fcc(c + 56710 - 97);
        } else {
          return fcc(55349) + fcc(c + 56684 - 65);
        }
      });
    },
    "Blackboard Bold": function(input) {
      return input.replace(/[a-z0-9]/gi, function(c) {
        c = c.charCodeAt(0);
        switch (c) {
          case 67:
            return fcc(8450);
          case 72:
            return fcc(8461);
          case 78:
            return fcc(8469);
          case 80:
            return fcc(8473);
          case 81:
            return fcc(8474);
          case 82:
            return fcc(8477);
          case 90:
            return fcc(8484);
        }
        if (c >= 97) {
          return fcc(55349) + fcc(c + 56658 - 97);
        } else if (c >= 65) {
          return fcc(55349) + fcc(c + 56632 - 65);
        } else {
          return fcc(55349) + fcc(c + 57304 - 48);
        }
      });
    }
  };

  $transformType = $("#transform--mode");

  $transformInput = $("#transform--input");

  $transformOutput = $("#transform--output");

  lipsum = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque euismod turpis sit amet magna sodales fermentum vitae eu tellus. Etiam nulla tortor, ultrices id orci sit amet, mattis pharetra nibh. Vivamus iaculis imperdiet odio non faucibus. Morbi ac aliquet nunc. Quisque eget erat vitae eros suscipit dignissim. Nunc turpis magna, aliquet nec eleifend in, dictum sed nunc. Aliquam sed tristique nunc, quis pellentesque urna. \n ABCDEFGHIJKLMNOPQRSTUVWXYZ \n abcdefghijklmnopqrstuvwxyz \n 0123456789";

  for (key in transforms) {
    $transformType.append("<option>" + key + "</option>");
  }

  doTransform = function() {
    var input, transform;
    input = $transformInput.val();
    transform = transforms[$transformType.val()];
    if (transform == null) {
      throw "No transform?";
    }
    if (!input) {
      $transformInput.val(lipsum);
      input = lipsum;
    }
    return $transformOutput.val(transform(input));
  };

  $("#transform--confirm").on("click", doTransform);

  doCopy = function() {
    $transformOutput.select();
    try {
      document.execCommand("copy");
    } catch (error) {}
    return $transformInput.select();
  };

  shortcutEnter = 13;

  shortcutUp = 38;

  shortcutDown = 40;

  $transformInput.keydown(function(e) {
    var el;
    if (!e.ctrlKey) {
      return;
    }
    switch (e.keyCode) {
      case shortcutEnter:
        doTransform();
        if (e.shiftKey) {
          return doCopy();
        }
        break;
      case shortcutUp:
        el = $("#transform--mode option:selected");
        if (!el.prev()) {
          return;
        }
        return el.prop("selected", false).prev().prop("selected", true);
      case shortcutDown:
        el = $("#transform--mode option:selected");
        if (!el.next()) {
          return;
        }
        return el.prop("selected", false).next().prop("selected", true);
    }
  });

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
